{"version":3,"sources":["Components/Redux/table-reducer.ts","Components/Array.ts","Components/Header/Header.tsx","Components/Table/additionalInfo/AdditionalInfo.tsx","Components/LocalStorageForTable.ts","Components/Table/newContact/NewContact.tsx","Components/Table/TableBigListOfContacts.tsx","App.tsx","reportWebVitals.js","Components/Redux/Store.ts","index.tsx","App.module.css","Components/Header/Header.module.css","Components/Table/additionalInfo/AdditionalInfo.module.css","Components/Table/Table.module.css"],"names":["initialState","input","array","Math","floor","random","modalIsOpenForList","modalIsOpenForError","modalForNewContact","status","setNewArrAC","type","SET_NEW_ARR","setInputAC","value","SET_INPUT","setModalIsOpenAC","SET_MODAL_IS_OPEN","setModalForNewContactAC","SET_MODAL_FOR_NEW_CONTACT","setStatus","SET_STATUS","SET_ADD_NEW_CONTACT","SET_DELETE_CONTACT","CHANGE_NAME_AC","CHANGE_EMAIL_AC","CHANGE_PHONE_AC","CHANGE_STATUS_AC","Header","props","useDispatch","console","log","className","styles","searcContainer","newInput","onChange","e","setNewInput","target","icon","faSearch","AdditionalInfo","dispatch","useState","editModeForName","setEditModeForName","editModeForEmail","setEditModeEmail","editModeForPhone","setEditModePhone","editModeForStatus","setEditModeStatus","additionalInfoObj","name","changeName","setChangeName","email","changeEmail","setChangeEmail","tel","changePhone","setChangePhone","changeStatus","setChangeStatus","style","container","TextField","size","variant","currentTarget","autoFocus","onBlur","id","onDoubleClick","phone","Button","btn","color","onClick","setShowAdditionalInfo","saveState","key","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","NewContact","isOpen","customStyles","contentLabel","info","justify","item","xs","FormControl","FormGroup","margin","placeholder","cont","setCont","Checkbox","disabled","length","checkNew","saveState1","newContact","content","width","height","top","left","right","bottom","marginRight","transform","TableBigListOfContacts","showAdditionalInfo","dataCreated","dataChanged","password","setAdditionalInfoObj","useSelector","table","useEffect","stateFromLocalStorage1","restoreState1","filteredNames","filter","c","toLowerCase","indexOf","filterContacts","setValue","i","firstName","match","setTimeout","error","newClassName","tableForHover","myTableHeader","box1","headerName","sort","a","b","box2","box3","box4","box5","box6","map","el","index","myTable","contactId","App","listOfContacts","newContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","tl","store","createStore","window","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d6101c34.chunk.js","sourcesContent":["import {defArr} from \"../Array\";\n\n\n\nexport type statusTypeForContact = 'client' | 'admin' | \"partner\" | ''\nlet initialState = {\n    input: \"\",\n    array: defArr as Array<defArrType>,\n    modalIsOpenForList: true,\n    modalIsOpenForError: false,\n    modalForNewContact: false,\n    // contact: {} as defArrType,\n    status: '' as statusTypeForContact,\n\n\n\n}\n\n\nexport function tableReducer(state: InitialStateType = initialState, action: AllACTypes):InitialStateType {\n    switch (action.type) {\n        case SET_NEW_ARR:\n            return {...state, array: action.array}\n        case SET_INPUT:\n            return {...state, input: action.value}\n        case SET_MODAL_IS_OPEN:\n            return {...state, modalIsOpenForError: action.value}\n        case SET_ADD_NEW_CONTACT:\n\n            const newContact = {\n                id: Math.floor(Math.random() * 1000),\n                name: action.newContact.name,\n                email: action.newContact.email,\n                tel: action.newContact.tel,\n                status: action.newContact.status,\n                dataCreated: 'test',\n                dataChanged: \"test\",\n                password: 'test'\n            }\n\n            return {\n                ...state,\n                array: [newContact, ...state.array]\n            }\n        case SET_STATUS:\n            return {...state, status: action.value}\n\n\n        case SET_MODAL_FOR_NEW_CONTACT: {\n            return {...state, modalForNewContact: action.value}\n        }\n        case SET_DELETE_CONTACT:\n            return {...state, array: state.array.filter(tl => tl.id !== action.contactId)}\n        case CHANGE_NAME_AC:\n            return {...state, array: state.array.map(a => a.id === action.id ? {...a, name: action.name} : a)}\n        case \"CHANGE_EMAIL_AC\":\n\n            return {...state, array: state.array.map(a => a.id === action.id ? {...a, email: action.email} : a)}\n\n        case \"CHANGE_PHONE_AC\":\n\n            return {...state, array: state.array.map(a => a.id === action.id ? {...a, tel: action.phone} : a)}\n\n        case \"CHANGE_STATUS_AC\":\n\n            return {...state, array: state.array.map(a => a.id === action.id ? {...a, status: action.status} : a)}\n\n        default:\n            return state\n    }\n}\n\n\nexport const setNewArrAC = (array:  Array<defArrType>): setNewArrACType => ({type: SET_NEW_ARR, array})\nexport const setInputAC = (value: string): setInputACType => ({type: SET_INPUT, value})\nexport const setModalIsOpenAC = (value: boolean): setModalIsOpenACType => ({type: SET_MODAL_IS_OPEN, value})\nexport const setAddNewContactAC = (newContact: newContactType): SetAddNewContactACType => ({\n    type: SET_ADD_NEW_CONTACT,\n    newContact\n})\nexport const setModalForNewContactAC = (value: boolean): SetModalForNewContactACType => ({\n    type: SET_MODAL_FOR_NEW_CONTACT,\n    value\n})\nexport const setStatus = (value: statusTypeForContact): setStatusType => ({\n    type: SET_STATUS,\n    value\n})\nexport const setDeleteContactAC = (contactId: number): setDeleteContactACType => ({\n    type: SET_DELETE_CONTACT,\n    contactId\n})\nexport const changeNameAC = (name: string, id: number): ChangeNameActionType => {\n    return {type: CHANGE_NAME_AC, id, name}\n}\nexport const changeEmailAC = (email: string, id: number): ChangeEmailACType => {\n    return {type: CHANGE_EMAIL_AC, id, email}\n}\nexport const changePhoneAC = (phone: string, id: number): ChangePhoneACType => {\n    return {type: CHANGE_PHONE_AC, id, phone}\n}\nexport const changeStatusAC = (status: string, id: number): ChangeStatusACType => {\n    return {type: CHANGE_STATUS_AC, id, status}\n}\n\ntype ChangeStatusACType = {\n    type: typeof CHANGE_STATUS_AC\n    id: number\n    status: string\n}\ntype ChangePhoneACType = {\n    type: typeof CHANGE_PHONE_AC\n    id: number\n    phone: string\n}\ntype ChangeEmailACType = {\n    type: typeof CHANGE_EMAIL_AC\n    id: number\n    email: string\n}\ntype ChangeNameActionType = {\n    type: typeof CHANGE_NAME_AC\n    id: number\n    name: string\n}\n\ntype SetModalForNewContactACType = {\n    type: typeof SET_MODAL_FOR_NEW_CONTACT\n    value: boolean\n}\ntype setDeleteContactACType = {\n    type: typeof SET_DELETE_CONTACT\n    contactId: number\n}\ntype setStatusType = {\n    type: typeof SET_STATUS\n    value: statusTypeForContact\n}\ntype SetAddNewContactACType = {\n    type: typeof SET_ADD_NEW_CONTACT\n    newContact: newContactType\n\n}\ntype newContactType = {\n    name: string\n    email: string,\n    tel: string,\n    status: statusTypeForContact\n}\n\n\ntype setNewArrACType = {\n    type: typeof SET_NEW_ARR\n    array: Array<defArrType>\n}\n\ntype setInputACType = {\n    type: typeof SET_INPUT\n    value: string\n}\ntype setModalIsOpenACType = {\n    type: typeof SET_MODAL_IS_OPEN\n    value: boolean\n}\ntype AllACTypes =\n    | setNewArrACType\n    | setInputACType\n    | setModalIsOpenACType\n    | SetAddNewContactACType\n    | SetModalForNewContactACType\n    | setStatusType\n    | setDeleteContactACType\n    | ChangeStatusACType\n    | ChangePhoneACType\n    | ChangeEmailACType\n    | ChangeNameActionType\n\n\nexport const SET_NEW_ARR = \"SET_NEW_ARR\"\nexport const SET_INPUT = \"SET_INPUT\"\nexport const SET_MODAL_IS_OPEN = \"SET_MODAL_IS_OPEN\"\nexport const SET_ADD_NEW_CONTACT = \"SET_ADD_NEW_CONTACT\"\nexport const SET_MODAL_FOR_NEW_CONTACT = \"SET_MODAL_FOR_NEW_CONTACT\"\nexport const SET_STATUS = \" SET_STATUS\"\nexport const SET_DELETE_CONTACT = \" SET_DELETE_CONTACT\"\nexport const CHANGE_NAME_AC = \"CHANGE-CHANGE_NAME_AC-TITLE\"\nexport const CHANGE_EMAIL_AC = \"CHANGE_EMAIL_AC\"\nexport const CHANGE_PHONE_AC = \"CHANGE_PHONE_AC\"\nexport const CHANGE_STATUS_AC = \"CHANGE_STATUS_AC\"\n\n\nexport type InitialStateType = {\n    array: Array<defArrType>\n    modalIsOpenForList: boolean,\n    modalIsOpenForError: boolean,\n    input: string,\n    modalForNewContact: boolean\n    // contact: defArrType,\n    status:  statusTypeForContact\n\n}\nexport type defArrType = {\n    \"id\": number,\n    \"name\": string,\n    \"email\": string,\n    \"status\": string\n    \"tel\": string\n    \"dataCreated\": string\n    \"dataChanged\": string,\n    \"password\": string\n}\n\n\n\n\n\n\n\n","import {defArrType} from \"./Redux/table-reducer\";\n\nexport let defArr:Array<defArrType> = [\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Albert\",\n        \"email\": \"Albert@gmail.com\",\n        \"tel\": \"89522003030\",\n        \"status\": \"client\",\n        \"dataCreated\":'12/12/2020',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Evgeny\",\n        \"email\": \"Commander@gmail.com\",\n        \"tel\": \"89522002020\",\n        \"status\": \"partner\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Ysance\",\n        \"email\": \"Ysance@gmail.com\",\n        \"tel\": \"89502003030\",\n        \"status\": \"client\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Elena\",\n        \"email\": \"Internet@gmail.com\",\n        \"tel\": \"89022001030\",\n        \"status\": \"partner\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Violetta\",\n        \"email\": \"yandex@gmail.com\",\n        \"tel\": \"89002003030\",\n        \"status\": \"client\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Angelika\",\n        \"email\": \"yandex@gmail.com\",\n        \"tel\": \"89112003030\",\n        \"status\": \"partner\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Vasylii\",\n        \"email\": \"Vasylii@gmail.com\",\n        \"tel\": \"89095553030\",\n        \"status\": \"client\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Tealium\",\n        \"email\": \"Tealium@gmail.com\",\n        \"tel\": \"89502663030\",\n        \"status\": \"partner\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Emarsys\",\n        \"email\": \"Emarsys@gmail.com\",\n        \"tel\": \"89992003999\",\n        \"status\": \"client\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Expsaert\",\n        \"email\": \"Expsaert@gmail.com\",\n        \"tel\": \"89002008888\",\n        \"status\": \"blocked\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"John\",\n        \"email\": \"John@gmail.com\",\n        \"tel\": \"89002009999\",\n        \"status\": \"partner\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Ysance\",\n        \"email\": \"Ysance@gmail.com\",\n        \"tel\": \"89002005088\",\n        \"status\": \"client\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Robert\",\n        \"email\": \"Robert@gmail.com\",\n        \"tel\": \"89998008888\",\n        \"status\": \"admin\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*100000),\n        \"name\": \"Timur\",\n        \"email\": \"Timur@gmail.com\",\n        \"tel\": \"89009808888\",\n        \"status\": \"client\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*10000),\n        \"name\": \"Roland\",\n        \"email\": \"Roland@gmail.com\",\n        \"tel\": \"89532008888\",\n        \"status\": \"admin\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*10000),\n        \"name\": \"Franc\",\n        \"email\": \"Franc@gmail.com\",\n        \"tel\": \"89852008888\",\n        \"status\": \"client\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*10000),\n        \"name\": \"Tewlum\",\n        \"email\": \"Tewlum@gmail.com\",\n        \"tel\": \"89382008888\",\n        \"status\": \"partner\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    },\n    {\n        \"id\": Math.floor(Math.random()*10000),\n        \"name\": \"Emarsysnk\",\n        \"email\": \"Emarsysnk@gmail.com\",\n        \"tel\": \"89009995888\",\n        \"status\": \"client\",\n        \"dataCreated\":'12/12/2019',\n        \"dataChanged\":'18/06/2020',\n        \"password\":'777'\n    }\n]","import React, {ChangeEvent} from \"react\";\nimport styles from './Header.module.css'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport {setInputAC, setNewArrAC} from \"../Redux/table-reducer\";\nimport {useDispatch} from \"react-redux\";\nimport {Button} from \"@material-ui/core\";\n\n\ntype HeaderPropsType = {\n    input: string\n    setValue: (value:string)=>void\n    newInput:string\n    setNewInput:any\n\n}\n\n\n\nexport const Header = (props: HeaderPropsType) => {\n    const dispatch = useDispatch()\n\n    const onChangeInputFind=(e:ChangeEvent<HTMLInputElement>)=>{\n            e.preventDefault()\n            // props.setValue(e.target.value)\n        dispatch(setInputAC(e.target.value))\n        }\n    console.log(props.input)\n\n// const clicked = (e:any)=>{\n//     props.setValue(e.target.value)\n// }\n\n    return <div className={styles.searcContainer}>\n\n            <input value={props.newInput}\n                   onChange={(e)=>{\n                       props.setNewInput(e.target.value)}}/>\n        <FontAwesomeIcon\n            icon={faSearch} className={styles.faSearch}/>\n\n\n    </div>\n}","import React, {ChangeEvent, useState} from 'react'\nimport style from './AdditionalInfo.module.css'\nimport {Button, TextField} from \"@material-ui/core\";\nimport {changeEmailAC, changeNameAC, changePhoneAC, changeStatusAC, defArrType} from \"../../Redux/table-reducer\";\nimport {useDispatch} from \"react-redux\";\n\ntype AdditionalInfoPropsType = {\n    additionalInfoObj: defArrType\n    setShowAdditionalInfo: (value: boolean) => void\n}\n\nexport const AdditionalInfo = (props: AdditionalInfoPropsType) => {\n    const dispatch = useDispatch()\n    let [editModeForName, setEditModeForName] = useState<boolean>(false);\n    let [editModeForEmail, setEditModeEmail] = useState<boolean>(false);\n    let [editModeForPhone, setEditModePhone] = useState<boolean>(false);\n    let [editModeForStatus, setEditModeStatus] = useState<boolean>(false);\n    let [changeName, setChangeName] = useState(props.additionalInfoObj.name)\n    let [changeEmail, setChangeEmail] = useState(props.additionalInfoObj.email)\n    let [changePhone, setChangePhone] = useState(props.additionalInfoObj.tel)\n    let [changeStatus, setChangeStatus] = useState(props.additionalInfoObj.status)\n\n    const activatedEditModeName = () => {\n        setEditModeForName(true);\n    }\n    const activatedEditModeEmail = () => {\n        setEditModeEmail(true);\n    }\n    const activatedEditModePhone = () => {\n        setEditModePhone(true);\n    }\n    const activatedEditModeStatus = () => {\n        setEditModeStatus(true);\n    }\n\n\n    const disActivatedEditMode1 = () => {\n        setEditModeForName(false);\n        dispatch(changeNameAC(changeName, props.additionalInfoObj.id))\n\n    }\n    const disActivatedEditMode2 = () => {\n        setEditModeEmail(false);\n        dispatch(changeEmailAC(changeEmail, props.additionalInfoObj.id))\n\n    }\n    const disActivatedEditMode3 = () => {\n        setEditModePhone(false);\n        dispatch(changePhoneAC(changePhone, props.additionalInfoObj.id))\n\n    }\n    const disActivatedEditMode4 = () => {\n        setEditModeStatus(false);\n        dispatch(changeStatusAC(changeStatus, props.additionalInfoObj.id))\n\n    }\n\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n        setChangeName(e.currentTarget.value)\n    }\n    const changeTitleEmail = (e: ChangeEvent<HTMLInputElement>) => {\n        setChangeEmail(e.currentTarget.value)\n    }\n    const changeTitlePhone = (e: ChangeEvent<HTMLInputElement>) => {\n        setChangePhone(e.currentTarget.value)\n    }\n    const changeTitleStatus = (e: ChangeEvent<HTMLInputElement>) => {\n        setChangeStatus(e.currentTarget.value)\n    }\n\n\n    return (\n        <div className={style.container}>\n\n            <div>\n                Выбран пользователь:\n                {\n                    editModeForName\n                        ?\n                        <TextField\n                            size={\"small\"}\n                            variant=\"outlined\"\n                            value={changeName}\n                            onChange={changeTitle}\n                            autoFocus={true}\n                            onBlur={disActivatedEditMode1}/>\n\n                        : <span onDoubleClick={activatedEditModeName}>{changeName}</span>\n\n                }\n            </div>\n            <div>\n                Email :\n                {\n                    editModeForEmail\n                        ?\n                        <TextField\n                            size={\"small\"}\n                            variant=\"outlined\"\n                            value={changeEmail}\n                            onChange={changeTitleEmail}\n                            autoFocus={true}\n                            onBlur={disActivatedEditMode2}/>\n                        : <span onDoubleClick={activatedEditModeEmail}>{changeEmail}</span>\n\n                }\n            </div>\n            <div>\n                Phone : {\n                editModeForPhone\n                    ?\n                    <TextField\n                        size={\"small\"}\n                        variant=\"outlined\"\n                        value={changePhone}\n                        onChange={changeTitlePhone}\n                        autoFocus={true}\n                        onBlur={disActivatedEditMode3}/>\n                    : <span onDoubleClick={activatedEditModePhone}>{changePhone}</span>\n\n            }\n            </div>\n            <div>\n                Status : {\n                editModeForStatus\n                    ?\n                    <TextField\n                        size={\"small\"}\n                        variant=\"outlined\"\n                        value={changeStatus}\n                        onChange={changeTitleStatus}\n                        autoFocus={true}\n                        onBlur={disActivatedEditMode4}/>\n                    : <span onDoubleClick={activatedEditModeStatus}>{changeStatus}</span>\n            }\n            </div>\n\n            <Button className={style.btn} color=\"secondary\" onClick={() => {\n                props.setShowAdditionalInfo(false)\n            }}>Close</Button>\n\n\n        </div>\n    )\n}","// !!! это отдельная таска, и НЕ нужно её делать внутри EditableSpan!!!\n// * вот вам функция для сохранения объектов в память браузера (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {//****************почему тут Т,я могу заменить его на string?\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// * и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// * использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n// сохраняем объект типа StateType в ячейке \"test\"\n\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\n// * добавьте на страницу Junior в компоненте для демонстрации EditableSpan 2 кнопки: одна должна сохранять значение EditableSpan в браузере, другая восстанавливать значение из браузера\n\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport style from \"../Table.module.css\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport {Button, Checkbox, FormControl, FormGroup, TextField} from \"@material-ui/core\";\nimport {statusTypeForContact, setAddNewContactAC, setModalForNewContactAC} from \"../../Redux/table-reducer\";\nimport {useDispatch} from \"react-redux\";\nimport {ContType} from \"../TableBigListOfContacts\";\n\ntype NewContactPropsType = {\n    modalForNewContact: boolean\n    customStyles: any\n    cont: ContType\n    setCont: ({}:ContType)=>void\n    saveState1: ()=>void\n    checkNew: statusTypeForContact\n}\n\nexport const NewContact = (props: NewContactPropsType) => {\n    const dispatch = useDispatch()\n    return (\n        <Modal\n            isOpen={props.modalForNewContact}\n            style={props.customStyles}\n            contentLabel=\"Example Modal\"\n        >\n            <div className={style.info}>\n                <Grid container justify=\"center\">\n                    <Grid item xs={10}>\n                        <FormControl>\n                            <FormGroup>\n                                <TextField type={'text'}\n                                           variant=\"outlined\"\n                                           margin=\"normal\"\n                                           placeholder={\"Name\"}\n                                           value={props.cont.name}\n                                           onChange={(e) => {\n                                               props.setCont({\n                                                   ...props.cont,\n                                                   name: e.target.value\n                                               })\n                                           }}/>\n                                <TextField type={'text'}\n                                           variant=\"outlined\"\n                                           margin=\"normal\"\n                                           placeholder={\"Email\"}\n                                           value={props.cont.email}\n                                           onChange={(e) => {\n                                               props.setCont({\n                                                   ...props.cont,\n                                                   email: e.target.value\n                                               })\n                                           }}/>\n                                <TextField type={'text'}\n                                           variant=\"outlined\"\n                                           margin=\"normal\"\n                                           value={props.cont.tel}\n                                           placeholder={\"Phone\"}\n                                           onChange={(e) => {\n                                               props.setCont({\n                                                   ...props.cont,\n                                                   tel: e.target.value\n                                               })\n                                           }}/>\n\n\n                                <span>\n                                        <Checkbox\n                                            disabled={props.cont.status.length > 1 ? true : false}\n                                            value={props.cont.status}\n                                            onChange={(e) => {\n                                                props.setCont({\n                                                    ...props.cont,\n                                                    status: 'client'\n                                                })\n                                            }}/>Client</span>\n                                <span> <Checkbox value={props.checkNew}\n                                                 disabled={props.cont.status.length > 1 ? true : false}\n                                                 onChange={(e) => {\n                                                     props.setCont({\n                                                         ...props.cont,\n                                                         status: 'admin'\n                                                     })\n                                                 }}/>Admin</span>\n                                <span><Checkbox value={props.checkNew}\n                                                disabled={props.cont.status.length > 1 ? true : false}\n                                                onChange={(e) => {\n                                                    props.saveState1()\n                                                    props.setCont({\n                                                        ...props.cont,\n                                                        status: 'partner'\n                                                    })\n\n                                                }}\n                                />Partner</span>\n                                <Button variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={(props.cont.name.length > 0) && props.cont.email.length > 0 && props.cont.tel.length > 0 ? false : true}\n                                        onClick={() => {\n                                            dispatch(setAddNewContactAC(props.cont))\n                                            // props.saveState1()\n                                            dispatch(setModalForNewContactAC(false))\n                                        }}>\n                                    ADD\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n                                    dispatch(setModalForNewContactAC(false))\n                                }}>Close</Button>\n                            </FormGroup>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </div>\n        </Modal>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport style from './Table.module.css'\nimport {Header} from \"../Header/Header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootStateType} from \"../Redux/Store\";\nimport {\n    statusTypeForContact,\n    defArrType,\n    setDeleteContactAC,\n    setInputAC, setModalForNewContactAC,\n    setModalIsOpenAC,\n    setNewArrAC, setStatus\n} from \"../Redux/table-reducer\";\nimport {Button, Checkbox} from \"@material-ui/core\";\nimport {AdditionalInfo} from \"./additionalInfo/AdditionalInfo\";\nimport {restoreState, saveState} from \"../LocalStorageForTable\";\nimport {NewContact} from \"./newContact/NewContact\";\n\n\nconst customStyles = {\n    content: {\n        width: '450px',\n        height: '550px',\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\n\nexport const TableBigListOfContacts = () => {\n    const dispatch = useDispatch()\n    const [showAdditionalInfo, setShowAdditionalInfo] = useState(false)\n    const [additionalInfoObj, setAdditionalInfoObj] = useState<defArrType>({\n        id: 1,\n        name: '',\n        email: '',\n        status: '',\n        tel: '',\n        dataCreated: '',\n        dataChanged: '',\n        password: ''\n    })\n\n    const input = useSelector<RootStateType, string>(state => state.table.input)\n    const status = useSelector<RootStateType, statusTypeForContact>(state => state.table.status)\n    const [checkNew] = useState<statusTypeForContact>('client')\n    const [cont, setCont] = useState<ContType>({\n        name: '',\n        email: '',\n        tel: '',\n        status: '' as statusTypeForContact,\n    })\n    const modalIsOpenForError = useSelector<RootStateType, boolean>(state => state.table.modalIsOpenForError)\n    const modalForNewContact = useSelector<RootStateType, boolean>(state => state.table.modalForNewContact)\n    const array = useSelector<RootStateType, Array<defArrType>>(state => state.table.array)\n    const [newInput, setNewInput] = useState<string>('')\n\n    useEffect(() => {\n        restoreState1()\n    }, [])\n    let filteredNames = array\n\n    let setValue = (value: string) => {\n        if (input.length > 0) {\n            dispatch(setNewArrAC(array.filter((i: any) => {\n                let matchNames = i.firstName.toLowerCase()\n                return matchNames.match(value)\n            })))\n        }\n        dispatch(setInputAC(value))\n\n        if (array.length === 0 && !modalIsOpenForError) {\n            dispatch(setModalIsOpenAC(true))\n            setTimeout(() => {\n                dispatch(setModalIsOpenAC(false))\n            }, 2000)\n        }\n    }\n    const onHandleClickASC = () => {\n\n        dispatch(setNewArrAC([...array].sort((a, b) => {\n            saveState1()\n            return a.name === b.name ? 0 :\n                a.name > b.name ? 1 : -1\n        })))\n\n    }\n    const onHandleClickDESC = () => {\n\n        dispatch(setNewArrAC([...array].sort((a, b) => {\n            saveState1()\n            return a.name === b.name ? 0 :\n                a.name < b.name ? 1 : -1\n        })))\n\n    }\n\n    filteredNames = array.filter((c: any) =>\n        c.tel.toLowerCase().indexOf(newInput.toLowerCase()) !== -1 || c.name.toLowerCase().indexOf(newInput.toLowerCase()) !== -1\n    )\n\n\n    if (status === 'admin') {\n        filteredNames = filteredNames.filter((c: any) => c.status === 'admin')\n    }\n    if (status === 'partner') {\n        filteredNames = filteredNames.filter((c: any) => c.status === 'partner')\n    }\n    if (status === 'client') {\n        filteredNames = filteredNames.filter((c: any) => c.status === 'client')\n    }\n\n    ///////////*********LOCAL STARAGE***********/////////////\n    useEffect(()=>{\n        saveState1()\n    },[filteredNames])\n    const saveState1 = () => {\n        saveState('filteresStatusContacts', array)\n    }\n\n    function restoreState1() {\n        let stateFromLocalStorage1 = restoreState(\"filteresStatusContacts\", array);\n        dispatch(setNewArrAC(stateFromLocalStorage1))\n    }\n\n    return (\n        <div>\n            <Button color=\"primary\" onClick={() => {\n                dispatch(setModalForNewContactAC(true))\n            }}>Добавить Контакт\n            </Button>\n            <NewContact\n                modalForNewContact={modalForNewContact}\n                customStyles={customStyles}\n                cont={cont}\n                setCont={setCont}\n                saveState1={saveState1}\n                checkNew={checkNew}\n            />\n            <div className={style.filterContacts}>\n               <span>\n                   <Checkbox color=\"primary\" onClick={() => {\n                       dispatch(setStatus('client'))\n                   }}\n                   />Client\n               </span>\n                <span><Checkbox color=\"primary\" onClick={() => {\n                    dispatch(setStatus('partner'))\n                }}/>Partner</span>\n                <span><Checkbox color=\"primary\" onClick={() => {\n                    dispatch(setStatus('admin'))\n                }}/>Admin</span>\n                <span><Checkbox color=\"primary\" onClick={() => {\n                    dispatch(setStatus(''))\n                }}/>All</span>\n            </div>\n\n            <Header newInput={newInput} setNewInput={setNewInput} input={input} setValue={setValue}/>\n\n            {modalIsOpenForError ? <div className={style.error}>Ничего не найдено</div> : ''}\n            <div className={style.newClassName}>\n                <div className={style.tableForHover}>\n                    <div className={style.myTableHeader}>\n                        <div className={style.box1}>\n                            <p className={style.headerName}>\n                                Id\n                                <span onClick={onHandleClickASC}>▲</span><span onClick={onHandleClickDESC}>▼</span></p>\n                        </div>\n                        <div className={style.box2}>\n                            <p className={style.headerName}>Name</p>\n                        </div>\n                        <div className={style.box3}>\n                            <p className={style.headerName}>Email</p>\n                        </div>\n                        <div className={style.box4}>\n                            <p className={style.headerName}>Phone</p>\n                        </div>\n                        <div className={style.box5}>\n                            <p className={style.headerName}>Status</p>\n                        </div>\n                        <div className={style.box6}>\n                            <p className={style.headerName}>Del</p>\n                        </div>\n                    </div>\n\n                    {filteredNames.map((el: any, index: any) => {\n                        return (\n                            <div onClick={() => {\n                                setAdditionalInfoObj({\n                                    id: el.id,\n                                    name: el.name,\n                                    email: el.email,\n                                    status: el.status,\n                                    tel: el.tel,\n                                    dataCreated: el.dataCreated,\n                                    dataChanged: el.dataChanged,\n                                    password: el.password\n                                })\n                                setShowAdditionalInfo(true)\n                            }}\n                                 className={style.myTable} key={el.id}>\n                                <div className={style.box1}>\n                                    <p>{el.id}</p>\n                                </div>\n                                <div className={style.box2}>\n                                    <p>{el.name}</p>\n                                </div>\n                                <div className={style.box3}>\n                                    <p>{el.email}</p>\n                                </div>\n                                <div className={style.box4}>\n                                    <p>{el.tel}</p>\n\n                                </div>\n                                <div className={style.box5}>\n                                    <p>{el.status}</p>\n                                </div>\n                                <div className={style.box6}>\n                                    <Button onClick={() => {\n                                        dispatch(setDeleteContactAC(el.id))\n                                        saveState1()\n                                    }}>X</Button>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n                {showAdditionalInfo && <AdditionalInfo setShowAdditionalInfo={setShowAdditionalInfo}\n                                                       additionalInfoObj={additionalInfoObj}/>}\n            </div>\n        </div>)\n}\n\nexport type ContType ={\n    name: string,\n    email: string,\n    tel: string,\n    status:  statusTypeForContact,\n}\n","import './App.module.css';\nimport React from \"react\";\nimport styles from './App.module.css'\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {TableBigListOfContacts} from \"./Components/Table/TableBigListOfContacts\";\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\nfunction App() {\n    const dispatch = useDispatch()\n    const modalIsOpenForList = useSelector<any, boolean>(state => state.table.modalIsOpenForList)\n    const listOfContacts = useSelector<any, any>(state => state.table.listOfContacts)\n  return (\n    <div className={styles.App}>\n\n      <div className={styles.newContainer}>\n\n\n           <TableBigListOfContacts/>\n\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\n\nimport {tableReducer} from \"./table-reducer\";\n\n\n\nconst reducers = combineReducers({\n    table: tableReducer,\n})\n\n\nexport const store = createStore(reducers)\nexport type RootStateType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store;\n\n// type AppDispatchType  = typeof store.dispatch\n// export const useAppDispatch = ()=> useDispatch<AppDispatchType>()\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Components/Redux/Store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n        </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"newContainer\":\"App_newContainer__2of63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searcContainer\":\"Header_searcContainer__OfKZU\",\"faSearch\":\"Header_faSearch__N5LGF\",\"preloader\":\"Header_preloader__3eRKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AdditionalInfo_container__2cUY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerName\":\"Table_headerName__21EZq\",\"myTableHeader\":\"Table_myTableHeader__3RyyJ\",\"myTable\":\"Table_myTable__3zrOv\",\"newClassName\":\"Table_newClassName__1X2TE\",\"types\":\"Table_types__Lc1_n\",\"error\":\"Table_error__3Zy0b\",\"box1\":\"Table_box1__22Fg_\",\"box2\":\"Table_box2__3eLkU\",\"box3\":\"Table_box3__yzWnD\",\"box4\":\"Table_box4__3h2vX\",\"box5\":\"Table_box5__3bESR\",\"box6\":\"Table_box6__J3DKp\",\"buttonOff\":\"Table_buttonOff__WdV62\",\"buttonOn\":\"Table_buttonOn__PEUcF\",\"errorEmail\":\"Table_errorEmail__3FtJ2\",\"filterContacts\":\"Table_filterContacts__2_3-J\",\"info\":\"Table_info__1J28m\"};"],"sourceRoot":""}